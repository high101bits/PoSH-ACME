"Name","Type","Command_WinRM_PoSh","Command_WinRM_WMI","Command_WinRM_Cmd","Command_RPC_Posh","Command_WMI","Properties_PoSh","Properties_WMI","Command_WinRS_WMIC","Command_WinRS_CMD","Description","ExportFileName"
"AD Accounts (All Details and User Information)","User","Invoke-Command -ScriptBlock { Get-ADUser -Filter * -Properties * }","Invoke-Command -ScriptBlock { Get-WmiObject -Class Win32_UserAccount -Filter ""LocalAccount='False'"" }","","","Get-WmiObject -Class Win32_UserAccount -Filter ""LocalAccount='False'""","PSComputerName, Name, CanonicalName, SID, Enabled, LockedOut, AccountLockoutTime, Created, LogonWorkStations, LastLogonDate, LastBadPasswordAttempt, PasswordLastSet, PasswordExpired, PasswordNeverExpires, PasswordNotRequired, CannotChangePassword, MemberOf, SmartCardLogonRequired, ScriptPath, HomeDrive, Title, Organization, Office, POBox, StreetAddress, City, State, PostalCode, Fax, OfficePhone, HomePhone, MobilePhone, EmailAddress","PSComputerName, *","winrs wmic useraccount","","Gets all the details and user information for Active Directory accounts.","AD Accounts (All Details and User Information)"
"AD Accounts (Logon and Password Policy)","User","Invoke-Command -ScriptBlock { Get-ADUser -Filter * -Properties * }","","","","","PSComputerName, Name, Enabled, LockedOut, AccountLockoutTime, LogonWorkStations, LastLogonDate, LastBadPasswordAttempt, PasswordLastSet, PasswordExpired, PasswordNeverExpires, PasswordNotRequired, CannotChangePassword","PSComputerName, *","","","Gets the logon and password policy for Active Directory accounts.","AD Accounts (Logon and Password Policy)"
"AD Accounts (Contact Information)","User","Invoke-Command -ScriptBlock { Get-ADUser -Filter * -Properties * }","","","","","PSComputerName, Name, Title, Organization, Office, POBox, StreetAddress, City, State, PostalCode, Fax, OfficePhone, HomePhone, MobilePhone, EmailAddress","PSComputerName, *","","","Gets just the contact information for Active Directory accounts.","AD Accounts (Contact Information)"
"AD Accounts (Disabled)","User","Invoke-Command -ScriptBlock { Search-ADAccount -AccountDisabled }","","Invoke-Command -ScriptBlock { cmd /c dsquery user -disabled }","","","PSComputerName, Name, Enabled, LockedOut, LastLogonDate, AccountExpirationDate, PasswordExpired, PaswordNeverExpires, SID, SamAccountName, UserPrincipalName, DistinguishedName, ObjectClass, ObjectGUID","PSComputerName, *","","winrs dsquery user -disabled","Gets Active Directory accounts that are disabled.","AD Accounts (Disabled)"
"AD Accounts (Expired)","User","Invoke-Command -ScriptBlock { Search-ADAccount -AccountExpired }","","","","","PSComputerName, Name, Enabled, LockedOut, LastLogonDate, AccountExpirationDate, PasswordExpired, PaswordNeverExpires, SID, SamAccountName, UserPrincipalName, DistinguishedName, ObjectClass, ObjectGUID","PSComputerName, *","","","Gets Active Directory accounts that are expired.","AD Accounts (Expired)"
"AD Accounts (Inactive)","User","Invoke-Command -ScriptBlock { Search-ADAccount -AccountInactive }","","Invoke-Command -ScriptBlock { cmd /c dsquery user domainroot -inactive 4 }","","","PSComputerName, Name, Enabled, LockedOut, LastLogonDate, AccountExpirationDate, PasswordExpired, PaswordNeverExpires, SID, SamAccountName, UserPrincipalName, DistinguishedName, ObjectClass, ObjectGUID","PSComputerName, *","","winrs dsquery user domainroot -inactive 4","Gets Active Directory accounts that are inactive.","AD Accounts (Inactive)"
"AD Accounts (Locked Out)","User","Invoke-Command -ScriptBlock { Search-ADAccount -LockedOut }","","","","","PSComputerName, Name, Enabled, LockedOut, LastLogonDate, AccountExpirationDate, PasswordExpired, PaswordNeverExpires, SID, SamAccountName, UserPrincipalName, DistinguishedName, ObjectClass, ObjectGUID","PSComputerName, *","","","Gets Active Directory accounts that are locked out.","AD Accounts (Locked Out)"
"AD Accounts (Created Within 30 Days)","User","Invoke-Command -ScriptBlock { $days = ((Get-Date).AddDays(-30)).Date ; Get-ADUser -Filter {whenCreated -ge $days} -Properties whenCreated }","","","","","PSComputerName, Name, Enabled, LockedOut, LastLogonDate, AccountExpirationDate, PasswordExpired, PaswordNeverExpires, SID, SamAccountName, UserPrincipalName, DistinguishedName, ObjectClass, ObjectGUID","PSComputerName, *","","","Gets Active Directory accounts that were created within the last 30 days.","AD Accounts (Created Within 30 Days)"
"AD Accounts (Password Last Set)","User","Invoke-Command -ScriptBlock { Get-ADUser -Filter * -Properties PasswordLastSet }","","","","","PSComputerName, Name, PasswordLastSet, Enabled, SamAccountName, SID","PSComputerName, *","","","","AD Accounts (Password Last Set)"
"AD Accounts (Password Last Set Domain Admins)","User","Invoke-Command -ScriptBlock { Get-ADGroupMember -Identity ""Domain Admins"" | Get-ADUser -Properties PasswordLastSet }","","","","","PSComputerName, Name, PasswordLastSet, Enabled, SamAccountName, SID","PSComputerName, *","","","","AD Accounts (Password Last Set Domain Admins)"
"AD Accounts (Password Never Expires)","User","Invoke-Command -ScriptBlock { Search-ADAccount -PasswordNeverExpires }","","","","","PSComputerName, Name, Enabled, LockedOut, LastLogonDate, AccountExpirationDate, PasswordExpired, PaswordNeverExpires, SID, SamAccountName, UserPrincipalName, DistinguishedName, ObjectClass, ObjectGUID","PSComputerName, *","","","","AD Accounts (Password Never Expires)"
"AD Domain Object Changes Made (Last 1 Hour)","User","Invoke-Command -ScriptBlock { $StartDate = (Get-Date).AddHours(-1) ; Get-ADObject -Filter 'whenChanged -gt $StartDate' -IncludeDeletedObjects -properties * | Sort-Object WhenCreated }","","","","","PSComputerName, Name, ObjectClass, WhenCreated, WhenChanged, Deleted, LastLogon, LogonCount, DistinguishedName, ObjectSID","PSComputerName, *","","","","AD Domain Object Changes Made (Last 1 Hour)"
"AD Domain Object Changes Made (Last 8 Hours)","User","Invoke-Command -ScriptBlock { $StartDate = (Get-Date).AddHours(-8) ; Get-ADObject -Filter 'whenChanged -gt $StartDate' -IncludeDeletedObjects -properties * | Sort-Object WhenCreated }","","","","","PSComputerName, Name, ObjectClass, WhenCreated, WhenChanged, Deleted, LastLogon, LogonCount, DistinguishedName, ObjectSID","PSComputerName, *","","","","AD Domain Object Changes Made (Last 8 Hours)"
"AD Domain Object Changes Made (Last 1 Day)","User","Invoke-Command -ScriptBlock { $StartDate = (Get-Date).AddDays(-1) ; Get-ADObject -Filter 'whenChanged -gt $StartDate' -IncludeDeletedObjects -properties * | Sort-Object WhenCreated }","","","","","PSComputerName, Name, ObjectClass, WhenCreated, WhenChanged, Deleted, LastLogon, LogonCount, DistinguishedName, ObjectSID","PSComputerName, *","","","","AD Domain Object Changes Made (Last 1 Day)"
"AD Domain Object Changes Made (Last 1 Week)","User","Invoke-Command -ScriptBlock { $StartDate = (Get-Date).AddDays(-7) ; Get-ADObject -Filter 'whenChanged -gt $StartDate' -IncludeDeletedObjects -properties * | Sort-Object WhenCreated }","","","","","PSComputerName, Name, ObjectClass, WhenCreated, WhenChanged, Deleted, LastLogon, LogonCount, DistinguishedName, ObjectSID","PSComputerName, *","","","","AD Domain Object Changes Made (Last 1 Week)"
"AD Domain Object Changes Made (Last 1 Month)","User","Invoke-Command -ScriptBlock { $StartDate = (Get-Date).AddMonths(-1) ; Get-ADObject -Filter 'whenChanged -gt $StartDate' -IncludeDeletedObjects -properties * | Sort-Object WhenCreated }","","","","","PSComputerName, Name, ObjectClass, WhenCreated, WhenChanged, Deleted, LastLogon, LogonCount, DistinguishedName, ObjectSID","PSComputerName, *","","","","AD Domain Object Changes Made (Last 1 Month)"
"AD Domain Object Creations (Last 1 Hour)","User","Invoke-Command -ScriptBlock { $StartDate = (Get-Date).AddHours(-1) ; Get-ADObject -Filter 'WhenCreated -gt $StartDate' -IncludeDeletedObjects -properties * | Sort-Object WhenCreated }","","","","","PSComputerName, Name, ObjectClass, WhenCreated, WhenChanged, Deleted, LastLogon, LogonCount, DistinguishedName, ObjectSID","PSComputerName, *","","","","AD Domain Object Creations (Last 1 Hour)"
"AD Domain Object Creations (Last 8 Hours)","User","Invoke-Command -ScriptBlock { $StartDate = (Get-Date).AddHours(-8) ; Get-ADObject -Filter 'WhenCreated -gt $StartDate' -IncludeDeletedObjects -properties * | Sort-Object WhenCreated }","","","","","PSComputerName, Name, ObjectClass, WhenCreated, WhenChanged, Deleted, LastLogon, LogonCount, DistinguishedName, ObjectSID","PSComputerName, *","","","","AD Domain Object Creations (Last 8 Hours)"
"AD Domain Object Creations (Last 1 Day)","User","Invoke-Command -ScriptBlock { $StartDate = (Get-Date).AddDays(-1) ; Get-ADObject -Filter 'WhenCreated -gt $StartDate' -IncludeDeletedObjects -properties * | Sort-Object WhenCreated }","","","","","PSComputerName, Name, ObjectClass, WhenCreated, WhenChanged, Deleted, LastLogon, LogonCount, DistinguishedName, ObjectSID","PSComputerName, *","","","","AD Domain Object Creations (Last 1 Day)"
"AD Domain Object Creations (Last 1 Week)","User","Invoke-Command -ScriptBlock { $StartDate = (Get-Date).AddDays(-7) ; Get-ADObject -Filter 'WhenCreated -gt $StartDate' -IncludeDeletedObjects -properties * | Sort-Object WhenCreated }","","","","","PSComputerName, Name, ObjectClass, WhenCreated, WhenChanged, Deleted, LastLogon, LogonCount, DistinguishedName, ObjectSID","PSComputerName, *","","","","AD Domain Object Creations (Last 1 Week)"
"AD Domain Object Creations (Last 1 Month)","User","Invoke-Command -ScriptBlock { $StartDate = (Get-Date).AddMonths(-1) ; Get-ADObject -Filter 'WhenCreated -gt $StartDate' -IncludeDeletedObjects -properties * | Sort-Object WhenCreated }","","","","","PSComputerName, Name, ObjectClass, WhenCreated, WhenChanged, Deleted, LastLogon, LogonCount, DistinguishedName, ObjectSID","PSComputerName, *","","","","AD Domain Object Creations (Last 1 Month)"
"AD Domain Controllers (All of them)","Domain","","","Invoke-Command -ScriptBlock { cmd /c netdom query DC }","","","","PSComputerName, *","","winrs netdom query DC","","AD Domain Controllers (All of them)"
"AD Domain Controllers (Primary)","Domain","","","Invoke-Command -ScriptBlock { cmd /c netdom query PDC }","","","","PSComputerName, *","","winrs netdom query PDC","","AD Domain Controllers (Primary)"
"AD Domain Controllers (That are Global Catalogs)","Domain","","","Invoke-Command -ScriptBlock { cmd /c dsquery server | dsget server -dnsname -site -isgc }","","","","PSComputerName, *","","winrs dsquery server | dsget server -dnsname -site -isgc","","AD Domain Controllers (That are Global Catalogs)"
"AD Domain Controllers (Read Only Domain Controllers [RODC])","Domain","","","Invoke-Command -ScriptBlock { cmd /c dsquery server -isreadonly }","","","","PSComputerName, *","","winrs dsquery server -isreadonly","","AD Domain Controllers (Read Only Domain Controllers [RODC])"
"AD Domain FSMO Roles","Domain","","","Invoke-Command -ScriptBlock { cmd /c netdom query FSMO }","","","","PSComputerName, *","","winrs netdom query FSMO","","AD Domain FSMO Roles"
"AD Domain FSMO (Schema Master in Forest)","Domain","Invoke-Command -ScriptBlock { Get-ADForest }","","Invoke-Command -ScriptBlock { cmd /c dsquery server -forest -hasfsmo Schema }","","","PSComputerName, SchemaMaster","PSComputerName, *","","winrs dsquery server -forest -hasfsmo Schema","","AD Domain FSMO (Schema Master in Forest)"
"AD Domain FSMO (Domain Naming Master)","Domain","Invoke-Command -ScriptBlock { Get-ADForest }","","Invoke-Command -ScriptBlock { cmd /c dsquery server -forest -hasfsmo Name }","","","PSComputerName, DomainNamingMaster","PSComputerName, *","","winrs dsquery server -forest -hasfsmo Name","","AD Domain FSMO (Domain Naming Master)"
"AD Domain FSMO (Primary Domain Controller)","Domain","Invoke-Command -ScriptBlock { Get-ADDomain }","","Invoke-Command -ScriptBlock { cmd /c dsquery server -hasfsmo PDC }","","","PSComputerName, PDCEmulator","PSComputerName, *","","winrs dsquery server -hasfsmo PDC","","AD Domain FSMO (Primary Domain Controller)"
"AD Domain FSMO (RID Master)","Domain","Invoke-Command -ScriptBlock { Get-ADDomain }","","Invoke-Command -ScriptBlock { cmd /c dsquery server -hasfsmo RID }","","","PSComputerName, RIDMaster","PSComputerName, *","","winrs dsquery server -hasfsmo RID","","AD Domain FSMO (RID Master)"
"AD Domain FSMO (Infrastructure Master)","Domain","Invoke-Command -ScriptBlock { Get-ADDomain }","","Invoke-Command -ScriptBlock { cmd /c dsquery server -hasfsmo INFR }","","","PSComputerName, InfrastructureMaster","PSComputerName, *","","winrs dsquery server -hasfsmo INFR","","AD Domain FSMO (Infrastructure Master)"
"AD Domain Organizationation Units (OUs)","Domain","","","Invoke-Command -ScriptBlock { cmd /c netdom query OU }","","","","PSComputerName, *","","winrs netdom query OU","","AD Domain Organizationation Units (OUs)"
"AD Domain Servers (All of them)","Domain","","","Invoke-Command -ScriptBlock { cmd /c netdom query server }","","","","PSComputerName, *","","winrs netdom query server","Lists all domain joined servers.","AD Domain Servers (All of them)"
"AD Domain Sites","Domain","","","Invoke-Command -ScriptBlock { cmd /c dsquery site -name * -limit 0 }","","","","PSComputerName, *","","winrs dsquery site -name * -limit 0","","AD Domain Sites"
"AD Domain Trusts","Domain, Trust","Invoke-Command -ScriptBlock { Get-ADTrust -Filter * }","Invoke-Command -ScriptBlock { Get-WmiObject -Class Microsoft_DomainTrustStatus -Namespace ROOT\MicrosoftActiveDirectory }","Invoke-Command -ScriptBlock { cmd /c netdom query TRUST }","","Get-WmiObject -Class Microsoft_DomainTrustStatus -Namespace ROOT\MicrosoftActiveDirectory","PSComputerName, TrustedDomain, TrustAttributes, TrustDirection, TrustType","PSComputername, TrustedDomain, TrustAttributes, TrustDirection, TrustType","","winrs netdom query TRUST","Gets all the trusted domain objects.","AD Domain Trusts"
"AD Domain Workstations (All of them)","Domain","","","Invoke-Command -ScriptBlock { cmd /c netdom query workstation }","","","","PSComputerName, *","","winrs netdom query workstation","Lists all domain joined workstations.","AD Domain Workstations (All of them)"
"AD Group (Primary Group is Domain Computers)","Domain","","","Invoke-Command -ScriptBlock { cmd /c dsquery * -filter ""(primaryGroupID=515)"" -limit 0 }","","","","PSComputerName, *","","winrs dsquery * -filter ""(primaryGroupID=515)"" -limit 0","","AD Group (Primary Group is Domain Computers)"
"AD Group (Primary Group is Domain Controllers)","Domain","","","Invoke-Command -ScriptBlock { cmd /c dsquery * -filter ""(primaryGroupID=516)"" -limit 0 }","","","","PSComputerName, *","","winrs dsquery * -filter ""(primaryGroupID=516)"" -limit 0","","AD Group (Primary Group is Domain Controllers)"
"AD Group (Primary Group is Domain Users)","Domain","","","Invoke-Command -ScriptBlock { cmd /c dsquery * -filter ""(primaryGroupID=513)"" -limit 0 }","","","","PSComputerName, *","","winrs dsquery * -filter ""(primaryGroupID=513)"" -limit 0","","AD Group (Primary Group is Domain Users)"
"AD Group (Primary Group is Guests)","Domain","","","Invoke-Command -ScriptBlock { cmd /c dsquery * -filter ""(primaryGroupID=514)"" -limit 0 }","","","","PSComputerName, *","","winrs dsquery * -filter ""(primaryGroupID=514)"" -limit 0","","AD Group (Primary Group is Guests)"
"AD Get All Object Classes","Domain","Invoke-Command -ScriptBlock { Get-AdObject -Filter * }","","","","","PSComputerName, *","PSComputerName, *","","","","AD Get All Object Classes"
"AD Computers (Details and OS Info)","User","Invoke-Command -ScriptBlock { Get-ADComputer -Filter * -Properties * }","","","","","PSComputerName, Enabled, Name, OperatingSystem, OperatingSystemServicePack, OperatingSystemHotfix, OperatingSystemVersion, IPv4Address, IPv6Address, LogonCount, LastLogonDate, WhenCreated, WhenChanged, Location, ObjectClass, SID, SIDHistory, DistinguishedName, DNSHostName, SamAccountName, CannotChangePassword","PSComputerName, *","","","","AD Computers (Details and OS Info)"
"AD Passowrd Policy (Default Domain)","User, Password","Invoke-Command -ScriptBlock { Get-ADDefaultDomainPasswordPolicy }","","","","","PSComputerName, *","PSComputerName, *","","","","AD Passowrd Policy (Default Domain)"
"AD Password Policy (Fine Grained)","User, Password","Invoke-Command -ScriptBlock { Get-ADFineGrainedPasswordPolicy -filter * }","","","","","PSComputerName, *","PSComputerName, *","","","","AD Password Policy (Fine Grained)"
"AD Groups","User","Invoke-Command -ScriptBlock { Get-ADGroup -Filter * -Properties *}","Invoke-Command -ScriptBlock { Get-WmiObject -Class Win32_Group -Filter ""LocalAccount='False'"" }","","","Get-WmiObject -Class Win32_Group -Filter ""LocalAccount='False'""","PSComputerName, Name, SID, SIDHistory, GroupCategory, GroupScope, @{n=""Member""; e={($_.Members -replace ""CN="",""`nCN="") }}, Members, MemberOf, WhenCreated, WhenChanged, DistinguishedName, Description, ProtectedFromAccidentalDeletion","PSComputerName, Name, Domain, SID, SIDType, Caption, Description","","","","AD Groups"
"AD Group Membership by Groups","User","","","","","","","PSComputerName, *","","","","AD Group Membership by Groups"
"AD Group Membership by Users","User","","","","","","","PSComputerName, *","","","","AD Group Membership by Users"
"AD Groups Without Account Members","User","Invoke-Command -ScriptBlock { Get-ADGroup -filter * | Where-Object {-Not ($_ | Get-ADGroupMember)} }","","","","","PSComputerName, Name, ObjectClass, DistinguishedName, GroupCategory, GroupScope, ObjectGUID, SamAccountName, SID","PSComputerName, *","","","","AD Groups Without Account Members"
"AD DNS All Records (Server 2008)","Network","","Invoke-Command -ScriptBlock { Get-WmiObject -Namespace root\MicrosoftDNS -class microsoftdns_resourcerecord }","","","Get-WmiObject -Namespace root\MicrosoftDNS -class microsoftdns_resourcerecord","PSComputerName, *","PSComputerName, __Class, ContainerName, DomainName, RecordData, OwnerName","","","","AD DNS All Records (Server 2008)"
"AD DNS Root Hints (Server 2008)","Network","","Invoke-Command -ScriptBlock { Get-WmiObject -Namespace root\MicrosoftDNS -class microsoftdns_resourcerecord | Where-Object {$_.domainname -eq '..roothints'} }","","","Get-WmiObject -Namespace root\MicrosoftDNS -class microsoftdns_resourcerecord","PSComputerName, *","PSComputerName, *","","","","AD DNS Root Hints (Server 2008)"
"AD DNS Zones (Server 2008)","Network","","Invoke-Command -ScriptBlock { Get-WmiObject -Namespace 'root\MicrosoftDNS' -Class MicrosoftDNS_Zone }","","","Get-WmiObject -Namespace 'root\MicrosoftDNS' -Class MicrosoftDNS_Zone","","PSComputerName, *","","","PSComputerName, Name","AD DNS Zones (Server 2008)"
"AD DNS Statistics (Server 2008)","Network","","Invoke-Command -ScriptBlock { Get-WmiObject -Namespace root\MicrosoftDNS -Class MicrosoftDNS_Statistic }","","","Get-WmiObject -Namespace root\MicrosoftDNS -Class MicrosoftDNS_Statistic","PSComputerName, *","PSComputerName, Name, Value","","","","AD DNS Statistics (Server 2008)"
"AD DNS Server Statistics (Time)","Network","Invoke-Command -ScriptBlock { Get-DnsServerStatistics | Select -ExpandProperty TimeStatistics }","","","","","PSComputerName, LastClearTime, ServerStartTime, TimeElapsedSinceLastClearedStatistics, TimeElapsedSinceLastClearedStatisticsBetweenRestart, TimeElapsedSinceServerStart, TimeElapsedSinceServerStartBetweenRestart","","","","","AD DNS Server Statistics (Time)"
"AD DNS Server Statistics (Query 1)","Network","Invoke-Command -ScriptBlock { Get-DnsServerStatistics | Select -ExpandProperty QueryStatistics }","","","","","PSComputerName, TcpClientConnections, TcpQueries, TcpQueriesSent, TcpResponses, TcpResponsesReceived, UdpQueries, UdpQueriesSent, UdpResponses, UdpResponsesReceived","","","","","AD DNS Server Statistics (Query 1)"
"AD DNS Server Statistics (Query 2)","Network","Invoke-Command -ScriptBlock { Get-DnsServerStatistics | Select -ExpandProperty Query2Statistics }","","","","","PSComputerName, Notify, Standard, TKeyNego, TotalQueries, TypeA, TypeAll, TypeAxfr, TypeIxfr, TypeMx, TypeNs, TypeOther, TypePtr, TypeSoa, TypeSrv, Update","","","","","AD DNS Server Statistics (Query 2)"
"AD DNS Server Global Query Block List","Network","Invoke-Command -ScriptBlock { Get-DnsServerGlobalQueryBlockList }","","","","","PSComputerName, Enabled, List","","","","","AD DNS Server Global Query Block List"
"AD DNS Server Global Name Zone","Network","Invoke-Command -ScriptBlock { Get-DnsServerGlobalNameZone }","","","","","PSComputerName, Enable, GlobalOverLocal, PreferAAAA, AlwaysQueryServer, EnableEDnsProbes, BlockUpdates, SendTimeout, ServerQueryInterval","","","","","AD DNS Server Global Name Zone"
"AD DNS Server Forwarder","Network","Invoke-Command -ScriptBlock { Get-DnsServerForwarder }","","","","","PSComputerName, UseRootHint, Timeout, EnableReordering, IPAddress, ReorderedIPAddress","","","","","AD DNS Server Forwarder"
"AD DNS Server Diagnostics","Network","Invoke-Command -ScriptBlock { Get-DnsServerDiagnostics }","","","","","PSComputerName, SaveLogsToPersistentStorage, Queries, Answers, Notifications, Update, QuestionTransactions, UnmatchedResponse, SendPackets, ReceivePackets, TcpPackets, UdpPackets, FullPackets, FilterIPAddressList, EventLogLevel, UseSystemEventLog, EnableLoggingToFile, EnableLogFileRollover, LogFilePath, MaxMBFileSize, WriteThrough, EnableLoggingForLocalLookupEvent, EnableLoggingForPluginDllEvent, EnableLoggingForRecursiveLookupEvent, EnableLoggingForRemoteServerEvent, EnableLoggingForServerStartStopEvent, EnableLoggingForTombstoneEvent, EnableLoggingForZoneDataWriteEvent, EnableLoggingForZoneLoadingEvent","","","","","AD DNS Server Diagnostics"
"AD DNS Server Scavenging","Network","Invoke-Command -ScriptBlock { Get-DnsServerScavenging }","","","","","PSComputerName, NoRefreshInterval, RefreshInterval, ScavengingInterval, ScavengingState, LastScavengeTime","","","","","AD DNS Server Scavenging"
"AD DNS Server Settings","Network","Invoke-Command -ScriptBlock { Get-DnsServerSetting }","","","","","PSComputerName, ComputerName, MajorVersion, MinorVersion, BuildNumber, IsReadOnlyDC, EnableDnsSec, EnableIPv6, ListeningIPAddress, AllIPAddress","","","","","AD DNS Server Settings"
"AD DNS Server RootHints","Network","Invoke-Command -ScriptBlock { Get-DnsServerRecursion }","","","","","PSComputerName, Enable, AdditionalTimeout, RetryInterval, Timeout, SecureResponse","","","","","AD DNS Server RootHints"
"AD DNS Server RootHints","Network","Invoke-Command -ScriptBlock { Get-DNSServerRootHint }","","","","","PSComputerName, *","","","","","AD DNS Server RootHints"
"AD DNS Server Zone","Network","Invoke-Command -ScriptBlock { Get-DnsServerZone }","","","","","PSComputerName, ZoneName, ZoneType, IsAutoCreated, IsDsIntegrated, IsReverseLookupZone, IsSigned","","","","","AD DNS Server Zone"
"AD DNS Server Zone Aging","Network","Invoke-Command -ScriptBlock { Get-DnsServer | Select -ExpandProperty ServerZoneAging }","","","","","PSComputerName, ZoneName, AgingEnabled, AvailForScavengeTime, RefreshInterval, NoRefreshInterval, ScavengeServers","","","","","AD DNS Server Zone Aging"
"AD Get All GPOs","GPO, Group Policy","Invoke-Command -ScriptBlock { Get-GPO -All }","","","","","PSComputerName, *","","","","Get all Group Policy Objects (GPO).","AD Get All GPOs"
